{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tatar\\\\Documents\\\\Full Stack Projects\\\\O Tic-Tac-Toe - Copy\\\\client\\\\src\\\\components\\\\Lobby.js\";\nimport React, { Component, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Button, Spinner } from 'reactstrap';\nimport Board from './Board';\nimport Stats from './Stats';\nimport Announcement from './Announcement';\nimport socket from './../apis/port';\nexport default class Lobby extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      socket.on(\"update\", gamestate => {\n        this.setState({\n          gamestate: gamestate\n        });\n      });\n    };\n\n    this.render = () => {\n      const gamestate = this.state.gamestate;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.props.waiting && /*#__PURE__*/React.createElement(Waiting, {\n        code: this.state.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }\n      }), !this.props.waiting && /*#__PURE__*/React.createElement(Game, {\n        gamestate: gamestate,\n        isPlayer_one: this.props.isPlayer_one,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 35\n        }\n      }));\n    };\n\n    this.state = {\n      isPlayer_one: this.props.isPlayer_one,\n      code: this.props.code,\n      gamestate: this.props.gamestate\n    };\n  }\n\n}\n\nclass Waiting extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(AnimatePresence, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(motion.div, {\n      className: \"waiting-lobby\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Waiting for someone to join\"), /*#__PURE__*/React.createElement(Spinner, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Click to Copy Session Code:\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        navigator.clipboard.writeText(this.props.code);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.props.code)));\n  }\n\n}\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      announcement: false,\n      message: \"\",\n      OpponentDisconnected: false\n    };\n\n    this.componentDidMount = () => {\n      socket.on(\"announcement\", text => {\n        switch (text) {\n          case \"player_one\":\n            if (this.props.isPlayer_one) {\n              this.setState({\n                announcement: true,\n                message: \"You Won!\"\n              });\n            } else {\n              this.setState({\n                announcement: true,\n                message: \"You Lost\"\n              });\n            }\n\n            break;\n\n          case \"player_two\":\n            if (this.props.isPlayer_one) {\n              this.setState({\n                announcement: true,\n                message: \"You Lost\"\n              });\n            } else {\n              this.setState({\n                announcement: true,\n                message: \"You Won!\"\n              });\n            }\n\n            break;\n\n          case \"tie\":\n            this.setState({\n              announcement: true,\n              message: \"Tie\"\n            });\n            break;\n        }\n\n        setTimeout(() => {\n          this.setState({\n            announcement: false\n          });\n        }, 1250);\n      });\n      socket.on(\"user-disconnected\", () => {\n        this.setState({\n          OpponentDisconnected: true\n        });\n      });\n    };\n  }\n\n  render() {\n    const gamestate = this.props.gamestate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, this.state.OpponentDisconnected && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 119\n      }\n    }, \"Opponent Disconnected\")), !this.state.OpponentDisconnected && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      gamestate: gamestate,\n      isPlayer_one: this.props.isPlayer_one,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, this.state.announcement && /*#__PURE__*/React.createElement(Announcement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 39\n      }\n    }, this.state.message), !this.state.announcement && /*#__PURE__*/React.createElement(Stats, {\n      gamestate: gamestate,\n      isPlayer_one: this.props.isPlayer_one,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 40\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tatar/Documents/Full Stack Projects/O Tic-Tac-Toe - Copy/client/src/components/Lobby.js"],"names":["React","Component","useState","motion","AnimatePresence","Button","Spinner","Board","Stats","Announcement","socket","Lobby","constructor","props","componentDidMount","on","gamestate","setState","render","state","waiting","code","isPlayer_one","Waiting","opacity","navigator","clipboard","writeText","Game","announcement","message","OpponentDisconnected","text","setTimeout","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport {motion,AnimatePresence} from 'framer-motion';\r\nimport {Button, Spinner} from 'reactstrap';\r\nimport Board from './Board';\r\nimport Stats from './Stats';\r\nimport Announcement from './Announcement';\r\nimport socket from './../apis/port';\r\n\r\n\r\nexport default class Lobby extends Component {\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n    \r\n        isPlayer_one:this.props.isPlayer_one,\r\n        code: this.props.code,\r\n        gamestate: this.props.gamestate\r\n        \r\n        \r\n      }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      socket.on(\"update\",(gamestate)=> {\r\n        this.setState({gamestate: gamestate})\r\n        \r\n      })\r\n    }\r\n\r\n\r\n    \r\n    render=()=>{\r\n      const gamestate = this.state.gamestate;\r\n      \r\n      return(\r\n        <div>\r\n          {this.props.waiting && <Waiting code={this.state.code}/>}\r\n          {!this.props.waiting && <Game gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>}\r\n        </div>\r\n    )\r\n    \r\n  \r\n  \r\n      \r\n    }\r\n}\r\n\r\nclass Waiting extends Component{\r\n  render(){\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div className=\"waiting-lobby\" initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}} >\r\n            <h5>Waiting for someone to join</h5>\r\n            <Spinner color=\"dark\"></Spinner>\r\n            <h6>Click to Copy Session Code:</h6>\r\n            <Button onClick={()=> {navigator.clipboard.writeText(this.props.code)}}>{this.props.code}</Button>\r\n            \r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass Game extends Component{\r\n\r\n  state={\r\n    announcement: false,\r\n    message: \"\",\r\n    OpponentDisconnected: false\r\n  }\r\n\r\n  \r\n\r\n\r\n  componentDidMount=()=> {\r\n    socket.on(\"announcement\", (text)=>{\r\n      switch (text){\r\n        case \"player_one\":\r\n          if(this.props.isPlayer_one){\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Won!\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Lost\"\r\n            }\r\n            );\r\n          }\r\n          break;\r\n        case \"player_two\":\r\n          if(this.props.isPlayer_one){\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Lost\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Won!\"\r\n            });\r\n          }\r\n          break;\r\n        case \"tie\":\r\n          this.setState({\r\n            announcement:true,\r\n            message: \"Tie\"\r\n          });\r\n          break;\r\n        \r\n      }\r\n      setTimeout(()=>{\r\n        this.setState({announcement: false});\r\n      }, 1250);\r\n    })\r\n\r\n    socket.on(\"user-disconnected\", ()=>{\r\n      this.setState({OpponentDisconnected:true});\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    const gamestate = this.props.gamestate;\r\n    \r\n\r\n    return(\r\n      <div>\r\n      {this.state.OpponentDisconnected && <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}><h1>Opponent Disconnected</h1></div>}\r\n      {!this.state.OpponentDisconnected && \r\n      <div className=\"game\">\r\n        <div className=\"board-container\">\r\n          <Board gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>\r\n          \r\n        </div>\r\n        <div className=\"stats-container\">\r\n          {this.state.announcement && <Announcement>{this.state.message}</Announcement>}\r\n          {!this.state.announcement && <Stats gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>}\r\n        </div>\r\n      </div>\r\n      }\r\n      </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}